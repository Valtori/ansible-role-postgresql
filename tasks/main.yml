- name: "Install PostgreSQL"
  ansible.builtin.include_tasks: present.yml
  when: state | default('present') == 'present'

- name: "Uninstall PostgreSQL"
  ansible.builtin.include_tasks: absent.yml
  when: state == 'absent'

- name: "Initialize PostgreSQL instance(s)"
  ansible.builtin.include_tasks: instance_present.yml
  when: state == 'instance_present'
  
- name: "Remove PostgreSQL instance(s)"
  ansible.builtin.include_tasks: instance_absent.yml
  when: state == 'instance_absent'

- name: "Start and enable PostgreSQL instance(s)"
  ansible.builtin.include_tasks: instance_started.yml
  when: state == 'instance_started'

- name: "Stop and disable PostgreSQL instance(s)"
  ansible.builtin.include_tasks: instance_stopped.yml
  when: state == 'instance_stopped'

- name: "Remove all PostgreSQL and related (services, processes, users)"
  ansible.builtin.include_tasks: all_absent.yml
  when: state == 'all_absent'

- name: "Create database(s)"
  ansible.builtin.include_tasks: database_present.yml
  when: state == 'database_present'

- name: "Drop database(s)"
  ansible.builtin.include_tasks: database_absent.yml
  when: state == 'database_absent'

- name: "Add user(s)"
  ansible.builtin.include_tasks: user_present.yml
  when: state == 'user_present'

- name: "Delete user(s)"
  ansible.builtin.include_tasks: user_absent.yml
  when: state == 'user_absent'

- name: "Add user to database"
  ansible.builtin.include_tasks: user_in_database_present.yml
  when: state == 'user_in_database_present'

- name: "Remove user from database"
  ansible.builtin.include_tasks: user_in_database_absent.yml
  when: state == 'user_in_database_absent'
